[{"D:\\React\\task\\src\\index.js":"1","D:\\React\\task\\src\\App.js":"2","D:\\React\\task\\src\\reportWebVitals.js":"3","D:\\React\\task\\src\\Components\\Home.js":"4","D:\\React\\task\\src\\Components\\Login.js":"5","D:\\React\\task\\src\\Components\\SignUp.js":"6","D:\\React\\task\\src\\Components\\Todo.js":"7","D:\\React\\task\\src\\Components\\base.js":"8","D:\\React\\task\\src\\Components\\Auth.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":316,"mtime":1611302625098,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":1732,"mtime":1611412338795,"results":"14","hashOfConfig":"11"},{"size":1790,"mtime":1611302604258,"results":"15","hashOfConfig":"11"},{"size":2331,"mtime":1611409203167,"results":"16","hashOfConfig":"11"},{"size":4417,"mtime":1611302235573,"results":"17","hashOfConfig":"11"},{"size":487,"mtime":1611385684305,"results":"18","hashOfConfig":"11"},{"size":611,"mtime":1611302198879,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1abdnx9",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\React\\task\\src\\index.js",[],["41","42"],"D:\\React\\task\\src\\App.js",[],"D:\\React\\task\\src\\reportWebVitals.js",[],"D:\\React\\task\\src\\Components\\Home.js",["43"],"D:\\React\\task\\src\\Components\\Login.js",["44","45","46","47","48","49"],"//import React, { Component } from \"react\";\nimport React, { useCallback, useContext } from \"react\";\nimport { withRouter, Redirect } from \"react-router\";\nimport app from \"./base.js\";\nimport { AuthContext } from \"./Auth.js\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nconst Login = ({ history }) => {\n  const handleLogin = useCallback(\n    async (event) => {\n      event.preventDefault();\n      const { email, password } = event.target.elements;\n      try {\n        await app\n          .auth()\n          .signInWithEmailAndPassword(email.value, password.value);\n        history.push(\"/Todo\");\n      } catch (error) {\n        alert(error);\n      }\n    },\n    [history]\n  );\n\n  return (\n    <div className=\"auth-wrapper\">\n      <div className=\"auth-inner\">\n        <h1>Log in</h1>\n        <form onSubmit={handleLogin}>\n          <div className=\"form-group\">\n            <label className=\"l-font\">Email address</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              className=\"form-control l-font\"\n              placeholder=\"Enter email\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"l-font\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"form-control l-font\"\n              placeholder=\"Enter password\"\n            />\n          </div>\n\n          <button type=\"submit\" className=\"btn btn-log-col btn-hover btn-block\">\n            Login\n          </button>\n          <p className=\"forgot-password text-right l-font\">\n            Already registered, Go to<Link to={\"/SignUp\"}>Signup?</Link>\n          </p>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Login);\n","D:\\React\\task\\src\\Components\\SignUp.js",["50","51","52","53"],"D:\\React\\task\\src\\Components\\Todo.js",["54","55","56","57","58"],"import React, { Component } from \"react\";\nimport app from \"./base\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Login from \"./Login\";\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n\n    // Setting up state\n    this.state = {\n      userInput: \"\",\n      pending_array: [],\n      completed_array: [],\n    };\n  }\n\n  // Set a user input value\n  updateInput(value) {\n    this.setState({\n      userInput: value,\n    });\n  }\n\n  // Add item if user input in not empty\n  addItem() {\n    if (this.state.userInput !== \"\") {\n      const userInput = {\n        // Add a random id which is used to delete\n        id: Math.random(),\n\n        // Add a user value to list\n        value: this.state.userInput,\n      };\n\n      // Update list\n      const pending_array = [...this.state.pending_array];\n      pending_array.push(userInput);\n\n      // completed_array.push(userInput);\n      // reset state\n      this.setState({\n        pending_array,\n\n        userInput: \"\",\n      });\n    }\n  }\n\n  deleteItem(key) {\n    const pending_array = [...this.state.pending_array];\n    const completed_array = [...this.state.completed_array];\n    // Filter values and leave value which we need to delete\n    const updateList = pending_array.filter((item) => item.id !== key);\n\n    const move = pending_array.filter((item) => item.id === key);\n    const move1 = move[0].value;\n    console.log(move1);\n    completed_array.push(move1);\n    console.log(completed_array);\n    // const moveList = completed_array.push((item) => item.id == key);\n    //console.log(moveList);\n    // Update list in state\n    this.setState({\n      pending_array: updateList,\n      completed_array,\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n        <br></br>\n        <br></br>\n        <Row\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            fontSize: \"3rem\",\n            fontWeight: \"bolder\",\n          }}\n        >\n          TODO LIST\n        </Row>\n\n        <hr />\n        <Row>\n          <Col md={{ span: 5, offset: 4 }}>\n            <InputGroup className=\"mb-3\">\n              <FormControl\n                placeholder=\"add task to do . . . \"\n                size=\"lg\"\n                value={this.state.userInput}\n                onChange={(item) => this.updateInput(item.target.value)}\n                aria-label=\"add something\"\n                aria-describedby=\"basic-addon2\"\n              />\n              <InputGroup.Append>\n                <Button variant=\"dark\" size=\"lg\" onClick={() => this.addItem()}>\n                  ADD TASK\n                </Button>\n              </InputGroup.Append>\n            </InputGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={{ span: 3, offset: 1 }}>\n            <h1>Pending Task</h1>\n            <ListGroup>\n              {/* map over and print items */}\n              {this.state.pending_array.map((item) => {\n                return (\n                  <ListGroup.Item\n                    variant=\"dark\"\n                    action\n                    onClick={() => this.deleteItem(item.id)}\n                  >\n                    {item.value}\n                  </ListGroup.Item>\n                );\n              })}\n            </ListGroup>\n          </Col>\n          <Col md={{ span: 5, offset: 1 }}>\n            <h1>Completed Task</h1>\n            <ListGroup>\n              {/* map over and print items */}\n              {this.state.completed_array.map((move1) => {\n                return (\n                  console.log(move1),\n                  (<ListGroup.Item variant=\"dark\">{move1}</ListGroup.Item>)\n                );\n              })}\n            </ListGroup>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col md={{ span: 5, offset: 5 }}>\n            <Link to={\"/Login\"}>\n              <Button variant=\"dark\" size=\"lg\" align=\"center\">\n                Logout\n              </Button>\n            </Link>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Todo;\n","D:\\React\\task\\src\\Components\\base.js",[],"D:\\React\\task\\src\\Components\\Auth.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":26},{"ruleId":"63","severity":1,"message":"67","line":2,"column":30,"nodeType":"65","messageId":"66","endLine":2,"endColumn":40},{"ruleId":"63","severity":1,"message":"68","line":3,"column":22,"nodeType":"65","messageId":"66","endLine":3,"endColumn":30},{"ruleId":"63","severity":1,"message":"69","line":5,"column":10,"nodeType":"65","messageId":"66","endLine":5,"endColumn":21},{"ruleId":"63","severity":1,"message":"70","line":6,"column":27,"nodeType":"65","messageId":"66","endLine":6,"endColumn":33},{"ruleId":"63","severity":1,"message":"71","line":6,"column":35,"nodeType":"65","messageId":"66","endLine":6,"endColumn":41},{"ruleId":"63","severity":1,"message":"72","line":6,"column":43,"nodeType":"65","messageId":"66","endLine":6,"endColumn":48},{"ruleId":"63","severity":1,"message":"70","line":3,"column":27,"nodeType":"65","messageId":"66","endLine":3,"endColumn":33},{"ruleId":"63","severity":1,"message":"71","line":3,"column":35,"nodeType":"65","messageId":"66","endLine":3,"endColumn":41},{"ruleId":"63","severity":1,"message":"72","line":3,"column":43,"nodeType":"65","messageId":"66","endLine":3,"endColumn":48},{"ruleId":"63","severity":1,"message":"73","line":4,"column":8,"nodeType":"65","messageId":"66","endLine":4,"endColumn":14},{"ruleId":"63","severity":1,"message":"74","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":11},{"ruleId":"63","severity":1,"message":"70","line":10,"column":27,"nodeType":"65","messageId":"66","endLine":10,"endColumn":33},{"ruleId":"63","severity":1,"message":"71","line":10,"column":35,"nodeType":"65","messageId":"66","endLine":10,"endColumn":41},{"ruleId":"63","severity":1,"message":"72","line":10,"column":43,"nodeType":"65","messageId":"66","endLine":10,"endColumn":48},{"ruleId":"63","severity":1,"message":"75","line":11,"column":8,"nodeType":"65","messageId":"66","endLine":11,"endColumn":13},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'Redirect' is defined but never used.","'AuthContext' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Button' is defined but never used.","'app' is defined but never used.","'Login' is defined but never used.","no-global-assign","no-unsafe-negation"]